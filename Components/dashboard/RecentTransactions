import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { ArrowUpRight, ArrowDownRight, Plus } from "lucide-react";
import { format } from "date-fns";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";

const categoryColors = {
  food_dining: "bg-orange-100 text-orange-800",
  transportation: "bg-blue-100 text-blue-800",
  shopping: "bg-purple-100 text-purple-800",
  entertainment: "bg-pink-100 text-pink-800",
  bills_utilities: "bg-red-100 text-red-800",
  groceries: "bg-green-100 text-green-800",
  income_salary: "bg-emerald-100 text-emerald-800",
  income_freelance: "bg-teal-100 text-teal-800",
  other: "bg-gray-100 text-gray-800"
};

export default function RecentTransactions({ transactions, accounts }) {
  const recentTransactions = transactions
    .sort((a, b) => new Date(b.date) - new Date(a.date))
    .slice(0, 8);

  const getAccountName = (accountId) => {
    const account = accounts.find(a => a.id === accountId);
    return account ? account.name : 'Unknown Account';
  };

  return (
    <Card className="shadow-lg border-0">
      <CardHeader className="flex flex-row items-center justify-between">
        <CardTitle className="text-xl font-bold text-gray-900">
          Recent Transactions
        </CardTitle>
        <Link to={createPageUrl("Transactions")}>
          <Button variant="outline" size="sm" className="gap-2">
            <Plus className="w-4 h-4" />
            Add Transaction
          </Button>
        </Link>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          {recentTransactions.map((transaction) => (
            <div key={transaction.id} className="flex items-center justify-between p-3 rounded-lg bg-gray-50 hover:bg-gray-100 transition-colors duration-200">
              <div className="flex items-center gap-3">
                <div className={`p-2 rounded-full ${
                  transaction.amount > 0 ? 'bg-green-100' : 'bg-red-100'
                }`}>
                  {transaction.amount > 0 ? (
                    <ArrowUpRight className="w-4 h-4 text-green-600" />
                  ) : (
                    <ArrowDownRight className="w-4 h-4 text-red-600" />
                  )}
                </div>
                <div>
                  <p className="font-medium text-gray-900">
                    {transaction.description}
                  </p>
                  <div className="flex items-center gap-2 mt-1">
                    <Badge 
                      variant="secondary" 
                      className={`text-xs ${categoryColors[transaction.category] || categoryColors.other}`}
                    >
                      {transaction.category.replace(/_/g, ' ')}
                    </Badge>
                    <span className="text-xs text-gray-500">
                      {getAccountName(transaction.account_id)}
                    </span>
                  </div>
                </div>
              </div>
              <div className="text-right">
                <p className={`font-semibold ${
                  transaction.amount > 0 ? 'text-green-600' : 'text-red-600'
                }`}>
                  {transaction.amount > 0 ? '+' : ''}${Math.abs(transaction.amount).toLocaleString()}
                </p>
                <p className="text-xs text-gray-500">
                  {format(new Date(transaction.date), 'MMM d')}
                </p>
              </div>
            </div>
          ))}
          {recentTransactions.length === 0 && (
            <div className="text-center py-8 text-gray-500">
              <p>No transactions yet</p>
              <Link to={createPageUrl("Transactions")}>
                <Button className="mt-3 bg-gradient-to-r from-emerald-500 to-teal-600 hover:from-emerald-600 hover:to-teal-700">
                  Add Your First Transaction
                </Button>
              </Link>
            </div>
          )}
        </div>
      </CardContent>
    </Card>
  );
}